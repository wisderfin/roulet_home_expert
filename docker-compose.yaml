version: "3.8"

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    restart: on-failure
    networks:
      - main

  alembic:
    build:
      context: ./app/backend/
      dockerfile: ./dockerfile
    command: sh -c "python -m alembic upgrade head"
    depends_on:
      - postgres
    restart: no
    networks:
      - main

  backend:
    build:
      context: ./app/backend/
      dockerfile: ./dockerfile
    command: sh -c "python -m uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8000:8000"
    volumes:
      - ./app/backend:/app/backend
    restart: always
    networks:
      - main

  bot:
    build:
      context: ./app/backend/
      dockerfile: ./dockerfile
    command: sh -c "python bot/main.py"
    volumes:
      - ./app/backend:/app/backend
    restart: always
    networks:
      - main

  frontend:
    build:
      context: ./app/frontend
      dockerfile: ./dockerfile
    command: sh -c "npm run build && npm run preview -- --host 0.0.0.0 --port 4173"
    ports:
      - "5173:5173"
    volumes:
      - ./app/frontend:/app/frontend
      - /app/frontend/node_modules
    restart: always
    networks:
      - main

  tuna:
    image: yuccastream/tuna:latest
    command: start --all --tunnels-file=/opt/tuna.yml
    environment:
      - TUNA_TOKEN=${TUNA_TOKEN}
    depends_on:
      - backend
    volumes:
      - ./tuna.yml:/opt/tuna.yml
    restart: always
    networks:
      - main

# network for communication of services
networks:
  main:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/24

# volume for redis data persistence
volumes:
  redis_data:
